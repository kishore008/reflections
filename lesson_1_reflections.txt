How did viewing a diff between two versions of a file help you see the bug that was introduced?
Well, we used the command line to compare 2 files, since I'm on windows, the command was FC, which stands for File Compare.
The command prompt shows the lines which includes changes from 2 files. By going through the changes, a typo was found, hence the bug could be rectified.
The command to compare the 2 files is as follows:
FC file1 file2

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
When I'm on a project, I can come back and see the changes made, if I'm stuck with a bug which didn't exist before, I can just compare the old and new files to weed
out the bug. This will save a lot of time and this is how I can be an efficient programmer.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
Version control systems like git allow saving multiple files in one commit because, the files are interdependent for the program to work, other version control
systems like google docs treat files separately because there is no interdependency.

How can you use the commands git log and git diff to view the history of files?
git log: It can be used to check all the commits made in the repository
git diff: It can be used to compare 2 commits by id's to understand the addition or deletion of code.

How might using version control make you more confident to make changes that could break something?
Well, with git, there is always a way back to revert to previous version, hence even if the application breaks, there's no problem, we can go back and start over.

Now that you have your workspace set up, what do you want to try using Git for?
I want to see how my web development is helped with git repository.